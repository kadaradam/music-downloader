version: "3.9"

services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    env_file:
      - .env
    environment:
      PORT: 3000
      RABBIT_MQ_URL: amqp://host.docker.internal:5672
      DB_URL: postgres://developer:password@postgres:5432/yt-mp3
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy

  db:
    image: postgres:15.2
    container_name: postgres-yt-mp3
    hostname: postgres
    ports:
        - 5432:5432
    environment:
        POSTGRES_DB: yt-mp3
        POSTGRES_USER: developer
        POSTGRES_PASSWORD: password
    volumes:
        - ytmp3-db-data:/var/lib/postgresql/data
    # Do not start DB migration until the DB is up
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "developer", "-d", "yt-mp3"]
        interval: 5s
        timeout: 30s
        retries: 3

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

networks:
  rabbitmq_network:
    driver: bridge

volumes:
  ytmp3-db-data:
